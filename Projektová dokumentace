Projektová dokumentace PVA – Snake
Co hra dělá:
Hra představuje klasickou Snake hru, tak jak ji všichni známe. Je to jednoduchá arkádová hra, ve které hráč ovládá hada, který se pohybuje po herním plátně. Cílem hry je sežrat co nejvíce jídla a přitom se vyhnout srážce s vlastním tělem hada, která hru ukončí. Jak asi víte, tak ve většině těchto Snake her hru ukončí i srážka se zdí, to tady neplatí, protože se mi zdi nepodařily a nestihl jsem je udělat, pokud tedy had dojde ke zdi, tak ji prostě projde a objeví se na opačné straně plátna a hra normálně pokračuje. Herní plátno je tvořeno černými políčky, na kterých se had pohybuje. Had se skládá z několika kruhových částí, na začátku konkrétně z osmi, přičemž jeho hlava je vždy tmavě zelená a tělo je svítivě zelené. Jídlo je reprezentováno růžovým kruhem. Hra je ovládána klávesami šipky, kterými hráč může měnit směr pohybu hada. Pod herní plochou nechybí ani velké zelené tlačítko „START“, které hru zahájí nebo restartuje. Vedle něj se nachází text s tyrkysovým podkladem „SKORE:“, vedle kterého se vždy vyskytuje číslo ukazující, kolik jablek již hráč posbíral. Za již zmíněným černým plátnem, tlačítkem start a textu se skórem se nachází pouze šedé pozadí formuláře.
Popis použitých technologií:
Použil jsem programovací jazyk C# a framework .NET pro vývoj desktopových aplikací. Moje hra je konkrétně vytvořena pomocí Windows Forms, což je součástí .NET Frameworku. Jelikož s programováním nemám zatím bohaté zkušenosti, tak jsem hojně využíval YouTube tutoriály a ChatGPT, oba tyto zdroje používali k vytvoření kódu dost podobné praktiky a způsoby, které jsem zkombinoval a pochopil, jak se hra tvoří.
Jak to funguje vevnitř:
Ve třídě Form1 jsou vytvořeny některé privátní proměnné jako List<Circle> Snake pro uchování hada, Circle Food pro uchování jídla, int maxWidth a int maxHeight pro uchování rozměrů herní plochy a int score pro uchování skóre hráče. Třída také obsahuje proměnné typu bool goLeft, goRight, goUp a goDown, které určují směr pohybu hada. Konstruktor třídy inicializuje novou instanci třídy Settings. Třída Settings je návrhový vzor Singleton a uchovává některé globální nastavení pro hru. V třídě jsou také implementovány některé události jako KeyIsDown a KeyIsUp pro detekci stisknutých kláves a StartGame pro spuštění nové hry. Dále jsou zde implementovány události UpdatePictureBoxGraphics a GameTimerEvent. UpdatePictureBoxGraphics se spouští pokaždé, když se aktualizuje herní plocha, a vykresluje hada a jídlo na herní plochu. GameTimerEvent se spouští každou časovou jednotku a aktualizuje pozici hada na herní ploše, kontroluje kolize s jídlem a kontroluje, zda hráč neudělal chybu, tedy jestli had nenarazil do zdi nebo do sebe. Funkce RestartGame inicializuje novou hru a nastavuje rozměry herní plochy, skóre, pozici hada a jídla. Funkce EatFood je volána, když had sežere jídlo, a zvyšuje skóre a přidává další článek do hada. Funkce GameOver je volána, když had do sebe, a ukončuje hru. Herní plocha je reprezentována v PictureBox na formuláři, kde jsou vykreslovány objekty hry. Herní objekty jsou reprezentovány třídou Circle, která uchovává souřadnice objektu na herní ploše.
Návod na použití:
Hra se spustí stiskem velkého již zmíněného zeleného tlačítka „START“. Snake po této události začne jezdit jedním směrem. Hra se nadále ovládá šipkami (ne WSAD), klasicky když zmáčknu šipku nahoru tak Snake změní směr a pojede nahoru, když zmáčkneme dolní šipku, tak pojede dolů a stejně to funguje i u pravé a levé šipky. Hráč poté musí sbírat růžové kruhy symbolizující jídlo, aby získal co nejvyšší skóre. Samotné skóre se vypisuje napravo vedle tlačítka „START“. Pokud hráč chce hru předčasně ukončit, musí použít křížek v pravém horním rohu formuláře. Když Snake vrazí do vlastního těla, hra končí, je ale možné ji restartovat opět pomocí stisku „START“ tlačítka a celý proces, který zde popisuji běží znovu.
Možný rozvoj v budoucnu/reálné využití projektu:
Projekt nemá nějaký hlubší význam, je to prostě klasická Snake hra, kterou jsem si vybral, protože na nic víc zatím nemám. Dala by se například využít jako jakýsi studijní materiál nebo něco podobného, protože jak jsem okoukal tak většina lidí dělá Snakea podobným způsobem jako právě já. Určitě by se mohli dodělat zdi, i přesto, že mi to bez nich možná i přijde zábavnější. Dala by se asi i do toho samotného formuláře přidat nějaká volba barev jakou bude had nebo jídlo mít. Komplikovanější by mohla být i třeba nějaká případná optimalizace pro mobily a tablety, že by se mohly k herní ploše přidat šipky, podle kterých by se hra na těchto zařízeních mohla ovládat. Mezi zatím pro mě nereálná vylepšení do budoucnu bych zařadil i možný multiplayer, případný mód s levely, kde by se hráči hra postupně stěžovala, k čemuž by se dalo přidat i několik dalších módů třeba i s hrou proti umělé inteligenci. Celý formulář by mohl vypadat mnohem lépe a mít i hezčí logo, každopádně ta základní hra funguje podle představ, které jsem si před zahájením tvorby udělal, takže jsem s tím prozatím docela spokojený. 
Shrnutí: 
Soubor, který jsem odevzdal byl mým druhým pokusem o tuto hru, ten první jsem dělal ještě na školním počítači a postupem času jsem zjišťovat, že více a více nefunguje. Pozitivní na tom bylo, že když jsem začal na svém počítači doma znovu a lépe, tak už jsem několika věcem rozuměl a nemusel si vše hledat. Poté přišlo jedno temné období – dlouho jsem byl zaseklý na úplně stupidní chybě (tak jak to u těchto věcí vždycky bývá) a když mi v této situaci nepomohl ani ChatGPT tak jsem se už opravdu bál, že budu muset začít už potřetí úplně od začátku. Problém byl v tom, že jsem měl prostě špatně zadanou jednu metodu. Naštěstí se mi to na docela poslední chvíli podařilo odhalit a hra byla zanedlouho konečně dokončena. V této dokumentaci jsme si shrnuli co hra dělá, co jsem použil, jak funguje, jak se používá a jak by se případně dala v budoucnu použít. Těch nápadů je tam nakonec docela dost, takže jestli se mi bude chtít a bude mě to bavit, tak něco z toho zkusím udělat. Myslím si ale, že základ hry Snake je hotový a připraven, pro ta případná vylepšení do budoucna.
